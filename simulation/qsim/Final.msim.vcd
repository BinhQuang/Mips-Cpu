$comment
	File created using the following command:
		vcd file Final.msim.vcd -direction
$end
$date
	Sat Jun 07 19:41:38 2025
$end
$version
	ModelSim Version 10.1d
$end
$timescale
	1ps
$end
$scope module Datapath_vlg_vec_tst $end
$var reg 4 ! ALUOp [3:0] $end
$var reg 1 " Branch $end
$var reg 1 # aluSrc $end
$var reg 1 $ clk $end
$var reg 1 % condZero $end
$var reg 2 & memToReg [1:0] $end
$var reg 1 ' memWrite $end
$var reg 2 ( pcSrc [1:0] $end
$var reg 2 ) regDst [1:0] $end
$var reg 1 * regWrite $end
$var reg 1 + rst $end
$var wire 1 , aluZero $end
$var wire 1 - instr [31] $end
$var wire 1 . instr [30] $end
$var wire 1 / instr [29] $end
$var wire 1 0 instr [28] $end
$var wire 1 1 instr [27] $end
$var wire 1 2 instr [26] $end
$var wire 1 3 instr [25] $end
$var wire 1 4 instr [24] $end
$var wire 1 5 instr [23] $end
$var wire 1 6 instr [22] $end
$var wire 1 7 instr [21] $end
$var wire 1 8 instr [20] $end
$var wire 1 9 instr [19] $end
$var wire 1 : instr [18] $end
$var wire 1 ; instr [17] $end
$var wire 1 < instr [16] $end
$var wire 1 = instr [15] $end
$var wire 1 > instr [14] $end
$var wire 1 ? instr [13] $end
$var wire 1 @ instr [12] $end
$var wire 1 A instr [11] $end
$var wire 1 B instr [10] $end
$var wire 1 C instr [9] $end
$var wire 1 D instr [8] $end
$var wire 1 E instr [7] $end
$var wire 1 F instr [6] $end
$var wire 1 G instr [5] $end
$var wire 1 H instr [4] $end
$var wire 1 I instr [3] $end
$var wire 1 J instr [2] $end
$var wire 1 K instr [1] $end
$var wire 1 L instr [0] $end
$var wire 1 M pc [31] $end
$var wire 1 N pc [30] $end
$var wire 1 O pc [29] $end
$var wire 1 P pc [28] $end
$var wire 1 Q pc [27] $end
$var wire 1 R pc [26] $end
$var wire 1 S pc [25] $end
$var wire 1 T pc [24] $end
$var wire 1 U pc [23] $end
$var wire 1 V pc [22] $end
$var wire 1 W pc [21] $end
$var wire 1 X pc [20] $end
$var wire 1 Y pc [19] $end
$var wire 1 Z pc [18] $end
$var wire 1 [ pc [17] $end
$var wire 1 \ pc [16] $end
$var wire 1 ] pc [15] $end
$var wire 1 ^ pc [14] $end
$var wire 1 _ pc [13] $end
$var wire 1 ` pc [12] $end
$var wire 1 a pc [11] $end
$var wire 1 b pc [10] $end
$var wire 1 c pc [9] $end
$var wire 1 d pc [8] $end
$var wire 1 e pc [7] $end
$var wire 1 f pc [6] $end
$var wire 1 g pc [5] $end
$var wire 1 h pc [4] $end
$var wire 1 i pc [3] $end
$var wire 1 j pc [2] $end
$var wire 1 k pc [1] $end
$var wire 1 l pc [0] $end
$var wire 1 m pcNext [31] $end
$var wire 1 n pcNext [30] $end
$var wire 1 o pcNext [29] $end
$var wire 1 p pcNext [28] $end
$var wire 1 q pcNext [27] $end
$var wire 1 r pcNext [26] $end
$var wire 1 s pcNext [25] $end
$var wire 1 t pcNext [24] $end
$var wire 1 u pcNext [23] $end
$var wire 1 v pcNext [22] $end
$var wire 1 w pcNext [21] $end
$var wire 1 x pcNext [20] $end
$var wire 1 y pcNext [19] $end
$var wire 1 z pcNext [18] $end
$var wire 1 { pcNext [17] $end
$var wire 1 | pcNext [16] $end
$var wire 1 } pcNext [15] $end
$var wire 1 ~ pcNext [14] $end
$var wire 1 !! pcNext [13] $end
$var wire 1 "! pcNext [12] $end
$var wire 1 #! pcNext [11] $end
$var wire 1 $! pcNext [10] $end
$var wire 1 %! pcNext [9] $end
$var wire 1 &! pcNext [8] $end
$var wire 1 '! pcNext [7] $end
$var wire 1 (! pcNext [6] $end
$var wire 1 )! pcNext [5] $end
$var wire 1 *! pcNext [4] $end
$var wire 1 +! pcNext [3] $end
$var wire 1 ,! pcNext [2] $end
$var wire 1 -! pcNext [1] $end
$var wire 1 .! pcNext [0] $end
$var wire 1 /! sampler $end
$scope module i1 $end
$var wire 1 0! gnd $end
$var wire 1 1! vcc $end
$var wire 1 2! unknown $end
$var tri1 1 3! devclrn $end
$var tri1 1 4! devpor $end
$var tri1 1 5! devoe $end
$var wire 1 6! alu_inst|Equal0~0_combout $end
$var wire 1 7! clk~combout $end
$var wire 1 8! clk~clkctrl_outclk $end
$var wire 1 9! pc_new[0]~0_combout $end
$var wire 1 :! rst~combout $end
$var wire 1 ;! pc_new[2]~1_combout $end
$var wire 1 <! pc_new[2]~2_combout $end
$var wire 1 =! r_pc|q[28]~1_combout $end
$var wire 1 >! r_pc|q[28]~0_combout $end
$var wire 1 ?! r_pc|q[28]~2_combout $end
$var wire 1 @! Add0~0_combout $end
$var wire 1 A! Add0~1_combout $end
$var wire 1 B! r_pc|q [31] $end
$var wire 1 C! r_pc|q [30] $end
$var wire 1 D! r_pc|q [29] $end
$var wire 1 E! r_pc|q [28] $end
$var wire 1 F! r_pc|q [27] $end
$var wire 1 G! r_pc|q [26] $end
$var wire 1 H! r_pc|q [25] $end
$var wire 1 I! r_pc|q [24] $end
$var wire 1 J! r_pc|q [23] $end
$var wire 1 K! r_pc|q [22] $end
$var wire 1 L! r_pc|q [21] $end
$var wire 1 M! r_pc|q [20] $end
$var wire 1 N! r_pc|q [19] $end
$var wire 1 O! r_pc|q [18] $end
$var wire 1 P! r_pc|q [17] $end
$var wire 1 Q! r_pc|q [16] $end
$var wire 1 R! r_pc|q [15] $end
$var wire 1 S! r_pc|q [14] $end
$var wire 1 T! r_pc|q [13] $end
$var wire 1 U! r_pc|q [12] $end
$var wire 1 V! r_pc|q [11] $end
$var wire 1 W! r_pc|q [10] $end
$var wire 1 X! r_pc|q [9] $end
$var wire 1 Y! r_pc|q [8] $end
$var wire 1 Z! r_pc|q [7] $end
$var wire 1 [! r_pc|q [6] $end
$var wire 1 \! r_pc|q [5] $end
$var wire 1 ]! r_pc|q [4] $end
$var wire 1 ^! r_pc|q [3] $end
$var wire 1 _! r_pc|q [2] $end
$var wire 1 `! r_pc|q [1] $end
$var wire 1 a! r_pc|q [0] $end
$var wire 1 b! pcSrc~combout [1] $end
$var wire 1 c! pcSrc~combout [0] $end
$var wire 1 d! ALUOp~combout [3] $end
$var wire 1 e! ALUOp~combout [2] $end
$var wire 1 f! ALUOp~combout [1] $end
$var wire 1 g! ALUOp~combout [0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 !
0"
0#
0$
0%
b0 &
0'
b0 (
b0 )
0*
0+
0,
0L
0K
0J
0I
0H
0G
0F
0E
0D
0C
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
02
01
00
0/
0.
0-
0l
0k
0j
0i
0h
0g
0f
0e
0d
0c
0b
0a
0`
0_
0^
0]
0\
0[
0Z
0Y
0X
0W
0V
0U
0T
0S
0R
0Q
0P
0O
0N
0M
0.!
0-!
1,!
0+!
0*!
0)!
0(!
0'!
0&!
0%!
0$!
0#!
0"!
0!!
0~
0}
0|
0{
0z
0y
0x
0w
0v
0u
0t
0s
0r
0q
0p
0o
0n
0m
x/!
00!
11!
x2!
13!
14!
15!
06!
07!
08!
09!
0:!
0;!
0<!
1=!
0>!
0?!
0@!
0A!
0a!
0`!
z_!
z^!
z]!
z\!
z[!
zZ!
zY!
zX!
zW!
zV!
zU!
zT!
zS!
zR!
zQ!
zP!
zO!
zN!
zM!
zL!
zK!
zJ!
zI!
zH!
zG!
zF!
0E!
zD!
zC!
zB!
0c!
0b!
0g!
0f!
0e!
0d!
$end
#20000
1$
17!
18!
0/!
#40000
0$
07!
08!
1/!
#60000
1$
17!
18!
0/!
#80000
0$
07!
08!
1/!
#100000
1$
17!
18!
0/!
#120000
0$
07!
08!
1/!
#140000
1$
17!
18!
0/!
#160000
0$
07!
08!
1/!
#180000
1$
17!
18!
0/!
#200000
0$
07!
08!
1/!
#220000
1$
17!
18!
0/!
#240000
0$
07!
08!
1/!
#260000
1$
17!
18!
0/!
#280000
0$
07!
08!
1/!
#300000
1$
17!
18!
0/!
#320000
0$
07!
08!
1/!
#340000
1$
17!
18!
0/!
#360000
0$
07!
08!
1/!
#380000
1$
17!
18!
0/!
#400000
0$
07!
08!
1/!
#420000
1$
17!
18!
0/!
#440000
0$
07!
08!
1/!
#460000
1$
17!
18!
0/!
#480000
0$
07!
08!
1/!
#500000
1$
17!
18!
0/!
#520000
0$
07!
08!
1/!
#540000
1$
17!
18!
0/!
#560000
0$
07!
08!
1/!
#580000
1$
17!
18!
0/!
#600000
0$
07!
08!
1/!
#620000
1$
17!
18!
0/!
#640000
0$
07!
08!
1/!
#660000
1$
17!
18!
0/!
#680000
0$
07!
08!
1/!
#700000
1$
17!
18!
0/!
#720000
0$
07!
08!
1/!
#740000
1$
17!
18!
0/!
#760000
0$
07!
08!
1/!
#780000
1$
17!
18!
0/!
#800000
0$
07!
08!
1/!
#820000
1$
17!
18!
0/!
#840000
0$
07!
08!
1/!
#860000
1$
17!
18!
0/!
#880000
0$
07!
08!
1/!
#900000
1$
17!
18!
0/!
#920000
0$
07!
08!
1/!
#940000
1$
17!
18!
0/!
#960000
0$
07!
08!
1/!
#980000
1$
17!
18!
0/!
#1000000
